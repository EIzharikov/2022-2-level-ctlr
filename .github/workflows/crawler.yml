name: Corpus Collection and Annotation

on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]

env:
    IMPLEMENTATION_TYPE: html
    REPOSITORY_TYPE: admin
    GITHUB_REPOSITORY: ${{ github.repository }}
    BRANCH_NAME: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      id: cache-dependencies
      with:
        path: |
          ~/.cache/pip
          ~/.local/share/virtualenvs
          venv
        key: ${{ env.GITHUB_REPOSITORY }}-${{ env.BRANCH_NAME }}-pip-${{ hashFiles('**/requirements*.txt') }}
        ttl: 1209600

    - name: Setup Python environment
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_qa.txt
    - name: Requirements check
      timeout-minutes: 2
      run: |
        source venv/bin/activate
        echo "Using cached dependencies in requirements check"
        bash config/stage_1_style_tests/_stage_requirements_check.sh
    - name: Code Style
      timeout-minutes: 2
      env:
        PR_NAME: ${{ github.event.pull_request.title }}
        PR_AUTHOR: ${{ github.actor }}
      run: |
        source venv/bin/activate
        echo "Using cached dependencies in code style checking"
        bash config/stage_1_style_tests/_stage_run_lint.sh "$PR_NAME" "$PR_AUTHOR"
    - name: Pymarkdownlnt checks
      timeout-minutes: 2
      run: |
        source venv/bin/activate
        echo "Using cached dependencies in code pymarkdownlnt checks"
        bash config/stage_1_style_tests/_stage_run_pymarkdownlnt.sh
    - name: Mypy checks
      timeout-minutes: 2
      run: |
        source venv/bin/activate
        echo "Using cached dependencies in mypy checks"
        bash config/stage_1_style_tests/_stage_run_mypy.sh
    - name: Import style checks
      timeout-minutes: 2
      run: |
        source venv/bin/activate
        echo "Using cached dependencies in import style checks"
        bash config/stage_1_style_tests/_stage_run_flake8.sh